
<div class="iconmebaby">
    <input type="text" placeholder="@Placeholder" @bind="@SearchText" @oninput="HandleInput">
    <svg id="SearchIcon" width="23" height="24" viewBox="0 0 23 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fill-rule="evenodd" clip-rule="evenodd" d="M10 0.75C4.61522 0.75 0.25 5.11522 0.25 10.5C0.25 15.8848 4.61522 20.25 10 20.25C15.3848 20.25 19.75 15.8848 19.75 10.5C19.75 5.11522 15.3848 0.75 10 0.75ZM1.75 10.5C1.75 5.94365 5.44365 2.25 10 2.25C14.5563 2.25 18.25 5.94365 18.25 10.5C18.25 15.0563 14.5563 18.75 10 18.75C5.44365 18.75 1.75 15.0563 1.75 10.5Z" fill="#2D264B" />
        <path d="M18.5304 17.9698C18.2375 17.6769 17.7626 17.6769 17.4697 17.9698C17.1768 18.2626 17.1768 18.7375 17.4697 19.0304L21.4696 23.0304C21.7625 23.3233 22.2374 23.3233 22.5303 23.0304C22.8232 22.7375 22.8232 22.2626 22.5303 21.9697L18.5304 17.9698Z" fill="#2D264B" />
    </svg>
   @* <svg id="SearchPipe" width="1" height="23" viewBox="0 0 1 23" fill="none" xmlns="http://www.w3.org/2000/svg">
        <line x1="0.5" y1="2.18557e-08" x2="0.499999" y2="23" stroke="#707070" />
    </svg>*@
</div>


@code {
    [Parameter]
    public string? Placeholder { get; set; }

    [Parameter]
    public string? SearchText { get; set; }

    [Parameter]
    public EventCallback<string> OnSearchChanged { get; set; }


    private async Task HandleInput(ChangeEventArgs e)
    {
        if (string.IsNullOrEmpty(e.Value?.ToString()) || e.Value?.ToString()?.Length >= 3)
        {
            SearchText = e.Value.ToString();
            await OnSearchChanged.InvokeAsync(SearchText);
        }
    }

}
